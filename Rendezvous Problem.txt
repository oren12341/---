#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

sem_t aArrived, bArrived; // Semaphores for synchronization

void *threadA(void *arg) {
    printf("A1\n");
    sem_post(&aArrived);  // Signal that Thread A has arrived
    sem_wait(&bArrived);  // Wait for Thread B to arrive
    printf("A2\n");
    return NULL;
}

void *threadB(void *arg) {
    printf("B1\n");
    sem_post(&bArrived);  // Signal that Thread B has arrived
    sem_wait(&aArrived);  // Wait for Thread A to arrive
    printf("B2\n");
    return NULL;
}

int main() {
    sem_init(&aArrived, 0, 0); // Initialize semaphore for Thread A to 0
    sem_init(&bArrived, 0, 0); // Initialize semaphore for Thread B to 0

    pthread_t t1, t2;
    pthread_create(&t1, NULL, threadA, NULL); // Create Thread A
    pthread_create(&t2, NULL, threadB, NULL); // Create Thread B

    pthread_join(t1, NULL); // Wait for Thread A to finish
    pthread_join(t2, NULL); // Wait for Thread B to finish

    return 0;
}
